package com.winthier.exploits;

import java.util.BitSet;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Value;
import org.bukkit.block.Block;

@Getter @RequiredArgsConstructor
final class BlockChunk {
    @Value
    static final class Vector {
        private final int x, y, z;

        static int ofBlock(int v) {
            if (v < 0) {
                return (v + 1) / 16 - 1;
            } else {
                return v / 16;
            }
        }

        static Vector of(Block block) {
            return new Vector(ofBlock(block.getX()), ofBlock(block.getY()), ofBlock(block.getZ()));
        }
    }

    private final BlockWorld blockWorld;
    private final BlockRegion blockRegion;
    private final Vector position;
    private final BitSet bits;

    boolean isBlockSet(int x, int y, int z) {
        int index = y * 16 * 16
            + z * 16
            + x;
        return bits.get(index);
    }

    void setBlock(int x, int y, int z, boolean value) {
        int index = y * 16 * 16
            + z * 16
            + x;
        bits.set(index, value);
    }

    boolean isBlockSet(Block block) {
        int x = block.getX() % 16;
        int y = block.getY() % 16;
        int z = block.getZ() % 16;
        if (x < 0) x += 16;
        if (y < 0) y += 16;
        if (z < 0) z += 16;
        return isBlockSet(x, y, z);
    }

    void setBlock(Block block, boolean value) {
        int x = block.getX() % 16;
        int y = block.getY() % 16;
        int z = block.getZ() % 16;
        if (x < 0) x += 16;
        if (y < 0) y += 16;
        if (z < 0) z += 16;
        setBlock(x, y, z, value);
    }
}
