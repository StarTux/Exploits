package com.winthier.exploits;

import com.winthier.exploits.bukkit.BukkitExploits;
import java.util.HashSet;
import java.util.UUID;
import lombok.Getter;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

@Getter
public final class ExploitsPlugin extends JavaPlugin {
    private PlayerPlacedBlocks playerPlacedBlocks;
    private PlayerActions playerActions;
    private BukkitExploits bukkitExploits;
    private final HashSet<UUID> debugs = new HashSet<>();

    @Override
    public void onEnable() {
        playerPlacedBlocks = new PlayerPlacedBlocks(this);
        playerActions = new PlayerActions(this);
        bukkitExploits = new BukkitExploits(this);
        getServer().getPluginManager().registerEvents(playerPlacedBlocks, this);
        getServer().getPluginManager().registerEvents(playerActions, this);
        playerPlacedBlocks.onEnable();
    }

    @Override
    public void onDisable() {
        playerPlacedBlocks.onDisable();
        playerPlacedBlocks = null;
        playerActions = null;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        Player player = sender instanceof Player ? (Player)sender : null;
        String cmd = args.length > 0 ? args[0].toLowerCase() : null;
        if (cmd == null) {
            return false;
        } else if (cmd.equals("highlight") || cmd.equals("hi") && args.length == 1) {
            if (player == null) return false;
            Block b = player.getLocation().getBlock();
            final int r = 32;
            int count = 0;
            for (int y = -r; y <= r; y += 1) {
                for (int z = -r; z <= r; z += 1) {
                    for (int x = -r; x <= r; x += 1) {
                        Block c = b.getRelative(x, y, z);
                        if (playerPlacedBlocks.isPlayerPlaced(c)) {
                            player.sendBlockChange(c.getLocation(), Material.GLOWSTONE, (byte)0);
                            count += 1;
                        }
                    }
                }
            }
            sender.sendMessage("Highlighted " + count + " player placed blocks within " + r + " radius.");
        } else if (cmd.equals("debug") && args.length == 1) {
            if (player == null) return false;
            UUID uuid = player.getUniqueId();
            if (debugs.remove(uuid)) {
                sender.sendMessage("Debug mode disabled");
            } else {
                debugs.add(uuid);
                sender.sendMessage("Debug mode enabled");
            }
        } else if (cmd.equals("migrate") && args.length == 4) {
            try {
                int result = Legacy.migrateFrom(this, args[1], args[2], args[3]);
                sender.sendMessage("Result: " + result);
            } catch (Exception e) {
                e.printStackTrace();
                sender.sendMessage("Error. See console!");
            }
        } else {
            return false;
        }
        return true;
    }

    boolean isDebug(Player player) {
        return debugs.contains(player.getUniqueId());
    }
}
